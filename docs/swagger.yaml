basePath: /api/v0.1
definitions:
  controllers.RandomUser:
    properties:
      age:
        example: 25
        type: integer
      coverImageUrl:
        example: cover.png
        type: string
      lat:
        example: 22.51
        type: number
      lng:
        example: 113.95
        type: number
      location:
        example: 南山区
        type: string
      occupation:
        example: 平面设计师
        type: string
      petName:
        example: Amy
        type: string
      userName:
        example: 豆豆
        type: string
    type: object
  controllers.RecommendedUser:
    properties:
      age:
        example: 25
        type: integer
      coverImageUrl:
        example: cover.png
        type: string
      images:
        example:
        - img1.jpg
        - img2.jpg
        items:
          type: string
        type: array
      lat:
        example: 22.51
        type: number
      lng:
        example: 113.95
        type: number
      location:
        example: 南山区
        type: string
      occupation:
        example: 平面设计师
        type: string
      petName:
        example: Amy
        type: string
      tags:
        example: 猫控 读书达人 电影爱好者
        type: string
      userName:
        example: 豆豆
        type: string
      verified:
        example: true
        type: boolean
    type: object
  controllers.UserDetails:
    properties:
      age:
        example: 25
        type: integer
      birthday:
        example: "1988-10-2"
        type: string
      constellation:
        example: 处女座
        type: string
      cover_Image:
        example: cover.png
        type: string
      declaration:
        example: 交友宣言
        type: string
      education:
        example: 本科
        type: string
      focusStatus:
        example: 1
        type: integer
      friendStatus:
        example: 0
        type: integer
      gender:
        example: 1
        type: integer
      height:
        example: 165cm
        type: string
      hobbies:
        example: 兴趣爱好
        type: string
      hometown:
        example: 湖南长沙
        type: string
      images:
        example:
        - img1.jpg
        - img2.jpg
        items:
          type: string
        type: array
      income:
        example: 15-25w
        type: string
      location:
        example: 深圳
        type: string
      marriage:
        example: 未婚
        type: string
      occupation:
        example: 平面设计师
        type: string
      petName:
        type: string
      purpose:
        example: 交友
        type: string
      self_Desc:
        example: 自我描述
        type: string
      tags:
        example:
        - 猫控
        - 读书达人
        - 电影爱好者
        - 旅行者
        items:
          type: string
        type: array
      the_One:
        example: 希望另一半的样子
        type: string
      userName:
        example: 豆豆
        type: string
      weight:
        example: 43kg
        type: string
    type: object
  controllers.UserDetailsUpdate:
    properties:
      age:
        example: 25
        type: integer
      birthday:
        example: "1988-10-2"
        type: string
      constellation:
        example: 处女座
        type: string
      declaration:
        example: 交友宣言
        type: string
      education:
        example: 本科
        type: string
      gender:
        example: 1
        type: integer
      height:
        example: 165cm
        type: string
      hobbies:
        example: 兴趣爱好
        type: string
      hometown:
        example: 湖南长沙
        type: string
      income:
        example: 15-25w
        type: string
      location:
        example: 深圳
        type: string
      marriage:
        example: 未婚
        type: string
      occupation:
        example: 平面设计师
        type: string
      purpose:
        example: 交友
        type: string
      self_Desc:
        example: 自我描述
        type: string
      tags:
        example: 猫控 读书达人 电影爱好者 旅行者
        type: string
      the_One:
        example: 希望另一半的样子
        type: string
      userName:
        example: 豆豆
        type: string
      weight:
        example: 43kg
        type: string
    type: object
  models.Agreement:
    properties:
      content:
        example: 协议正文
        type: string
      name:
        example: terms
        type: string
      title:
        example: hello peer用户服务协议
        type: string
    type: object
  models.AutoLogin:
    properties:
      code:
        example: xtdad-fdfdsf
        type: string
    type: object
  models.BasicInfo:
    properties:
      birth_day:
        example: "2010-10-09"
        type: string
      constellation:
        example: 白羊座
        type: string
      education:
        example: 本科
        type: string
      gender:
        example: 1
        type: integer
      height:
        example: 178
        type: number
      hometown:
        example: 重庆
        type: string
      location:
        example: 深圳
        type: string
      marriage:
        example: 未婚
        type: string
      occupation:
        example: 设计师
        type: string
      weight:
        example: 56.5
        type: number
    type: object
  models.ContactApproveRequest:
    properties:
      "on":
        example: "1"
        type: string
    type: object
  models.ContactRequest:
    properties:
      message:
        example: 我们能做好朋友吗？
        type: string
      "on":
        example: "1"
        type: string
    type: object
  models.Fan:
    properties:
      age:
        example: 26
        type: integer
      coverImage:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      location:
        example: 广东，深圳
        type: string
      occupation:
        example: 产品经理
        type: string
      petName:
        example: 一个宠物
        type: string
      status:
        example: 1
        type: integer
      uid:
        example: 1
        type: integer
      username:
        example: 苹果香蕉
        type: string
    type: object
  models.FocusRequest:
    properties:
      "on":
        example: "2"
        type: string
      status:
        example: "1"
        type: string
    type: object
  models.Friend:
    properties:
      age:
        example: 27
        type: integer
      coverImage:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      gender:
        example: 2
        type: integer
      location:
        example: 广东省深圳市
        type: string
      occupation:
        example: UI设计
        type: string
      petName:
        example: 一个宠物
        type: string
      petType:
        example: 1
        type: integer
      uid:
        example: 1
        type: integer
      username:
        example: 苹果香蕉
        type: string
    type: object
  models.FriendToMeResponse:
    properties:
      coverImage:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      message:
        example: 我们可以做朋友吗？
        type: string
      petName:
        example: 一个宠物
        type: string
      state:
        example: 1
        type: integer
      uid:
        example: 1
        type: integer
      username:
        example: 苹果香蕉
        type: string
    type: object
  models.HomepageInfo:
    properties:
      avatar:
        example: avatar1-1234.jpg
        type: string
      location:
        example: 广东,深圳
        type: string
      pet_food:
        example: 320
        type: integer
      pet_name:
        example: 宠物猫猫
        type: string
      stat:
        $ref: '#/definitions/models.RelationStat'
      user_name:
        example: 用户1
        type: string
    type: object
  models.InfoCompletionLevel:
    properties:
      level:
        example: 1
        type: integer
    type: object
  models.MyFriendRequest:
    properties:
      createdAt:
        example: "2022-09-24"
        type: string
      id:
        example: 1
        type: integer
      images:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      petName:
        example: 一个宠物
        type: string
      state:
        example: 1
        type: integer
      userName:
        example: 苹果香蕉
        type: string
    type: object
  models.Pagination:
    properties:
      limit:
        example: 4
        type: integer
      offset:
        example: 0
        type: integer
    type: object
  models.PetRequest:
    properties:
      birthday:
        example: "2021-10-12"
        type: string
      description:
        example: 这是一个好宠物
        type: string
      pet_Name:
        example: 狗狗2022
        type: string
      sex:
        example: MM
        type: string
      weight:
        example: 3.2
        type: number
    type: object
  models.PetResponse:
    properties:
      birthday:
        example: "2021-10-12"
        type: string
      description:
        example: 这是一个好宠物
        type: string
      images:
        example:
        - img1.jpg
        - img2.jpg
        items:
          type: string
        type: array
      pet_Name:
        example: 狗狗2022
        type: string
      sex:
        example: MM
        type: string
      weight:
        example: 3.2
        type: number
    type: object
  models.Position:
    properties:
      lat:
        example: 30.3232
        type: number
      lng:
        example: 100.4342
        type: number
    type: object
  models.RecommendSetting:
    properties:
      age_Max:
        example: 40
        type: integer
      age_Min:
        example: 22
        type: integer
      gender:
        example: 女生
        type: string
      hometown:
        example: 同省优先
        type: string
      location:
        example: 只要同城
        type: string
      pet_Lover:
        example: 喜欢就行
        type: string
      tags:
        example: 不限
        type: string
    type: object
  models.RelationStat:
    properties:
      focus_by_new:
        example: 4
        type: integer
      focus_on_total:
        example: 24
        type: integer
      focused_by_total:
        example: 50
        type: integer
      know_me_new:
        example: 3
        type: integer
      know_me_total:
        example: 20
        type: integer
      viewed_by_new:
        example: 10
        type: integer
      viewed_by_total:
        example: 200
        type: integer
    type: object
  models.SquareSettings:
    properties:
      gender:
        example: 女生
        type: string
      location:
        example: 不限
        type: string
    type: object
  models.Token:
    properties:
      accessToken:
        example: cdaefj93sds-eqedsdsdsa-3sadasdsss
        type: string
      expiresIn:
        example: 186624000
        type: integer
      tokenType:
        example: bearer
        type: string
    type: object
  models.UserGender:
    properties:
      gender:
        example: 1
        type: integer
    type: object
  models.UserIMSig:
    properties:
      id:
        type: string
      sig:
        type: string
    type: object
  models.UserPhoneNumber:
    properties:
      phoneNumber:
        type: string
    type: object
  models.UserProfileForm:
    properties:
      code:
        example: xtdad-fdfdsf
        type: string
      encryptedData:
        example: 7SfFtStsHqKZYhbIkke3BH2bCRzGD15T0jEiUtuksrl9lDeHm9LsPmswJymBXuinPCiXkZhd/uq7s7pACTvbWuvvoKEwz5fAJ6Vr9bTx79XVxiIN4r+Fwm6QHO9DjPkFrxTGAZvMYLyH6IOyOV/nmmlMoBM3G4peSnBi1qCYukwlyCMNp67lb93wSiPAoI7eRhYYw8ayPTsZ/MAJ9CBBUiCwM5aFOUWrMKNTikeq7YVjNCv7KCz0LJTrMKda0YMS0J/034L8x9vJ1OnIkxlWVMQEy/f55IfWVHI1I1fSKd5azzyVKXCbWDpU0PLJnU8XM/l4L7ZUlDOcRMR5KQVGhB9rIjVkykdXUPQK87v8lpnitslK06XceOJqDjK6mRkhJWOYpFUozZa6idFV6xmLZX8bkBsLxczzp1h/satEH7rIz3nKbxd3O1c+3dI2soSt8qFtaumcGdwhenTm+at0gxccAp8JD8PZiB5ZDLTofZIQ4RmI004SIExYUDZUje9mZO+3aC8McVwzrEyK7NKD/NZ5/dYPgDRwzBl1Vm99niY=
        type: string
      iv:
        example: z3tGYrgMcbLzd0qXqZuduQ==
        type: string
      rawData:
        example: ""
        type: string
      signature:
        example: ""
        type: string
      userInfo:
        example: ""
        type: string
    type: object
  models.UserSetting:
    properties:
      helloId:
        example: hp135895332
        type: string
      id:
        example: 1
        type: integer
      petVerified:
        example: 0
        type: integer
      phone:
        example: "13726352437"
        type: string
      verified:
        example: 1
        type: integer
      wechatName:
        example: 香蕉苹果
        type: string
    type: object
  models.View:
    properties:
      age:
        example: 26
        type: integer
      coverImage:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      highlight:
        example: 感兴趣
        type: string
      location:
        example: 广东，深圳
        type: string
      message:
        example: Ta好像对你很感兴趣
        type: string
      occupation:
        example: 产品经理
        type: string
      petName:
        example: 一个宠物
        type: string
      status:
        example: 1
        type: integer
      uid:
        example: 1
        type: integer
      username:
        example: 香蕉苹果
        type: string
    type: object
  models.ViewRequest:
    properties:
      "on":
        example: "2"
        type: string
    type: object
  models.ViewTo:
    properties:
      age:
        example: 26
        type: integer
      coverImage:
        example: https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL13ic0iaA0ffWldrLjv9Ou02CuJCcjuKJ7rAzatVEzEUsrceUEdIuSiaR7bnicf5X2puMFRNDLrPEJlw/132
        type: string
      location:
        example: 广东，深圳
        type: string
      occupation:
        example: 产品经理
        type: string
      petName:
        example: 一个宠物
        type: string
      status:
        example: 1
        type: integer
      uid:
        example: 1
        type: integer
      username:
        example: 香蕉苹果
        type: string
    type: object
host: https://hellopeer.net
info:
  contact:
    email: 726569998@qq.com
    name: Frank Sheng
  description: Hello Peer是一款基于兴趣的社交应用。
  termsOfService: API文档仅用于Hello Peer研发使用。
  title: Hello Peer API
  version: "0.1"
paths:
  /auth/authlogin:
    post:
      consumes:
      - application/json
      description: 通过传递微信登录code以及getUserProfile返回字段换取用户token
      operationId: authlogin
      parameters:
      - description: 微信登录code以及getUserProfile返回字段
        in: body
        name: code
        required: true
        schema:
          $ref: '#/definitions/models.UserProfileForm'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.Token'
      summary: 授权用户登录
      tags:
      - Auth
  /auth/autologin:
    post:
      consumes:
      - application/json
      description: 通过传递微信登录code换取用户token
      operationId: autologin
      parameters:
      - description: 微信登录code
        in: body
        name: code
        required: true
        schema:
          $ref: '#/definitions/models.AutoLogin'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.Token'
      summary: 未授权用户登录
      tags:
      - Auth
  /images/{file_name}:
    get:
      description: 获取图片
      operationId: get_image
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 获取图片
      tags:
      - Util
  /settings/getRecommendSetting:
    get:
      consumes:
      - application/json
      description: 可通过用户ID获取用户推荐设置
      operationId: get_recommend_settings
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.RecommendSetting'
      security:
      - x-token: []
      summary: 获取用户推荐设置
      tags:
      - Settings
  /settings/getSquareSetting:
    get:
      consumes:
      - application/json
      description: 可通过用户ID获取用户广场设置
      operationId: get_square_settings
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.SquareSettings'
      security:
      - x-token: []
      summary: 获取用户广场设置
      tags:
      - Settings
  /settings/setRecommendSetting:
    post:
      consumes:
      - application/json
      description: 可设置用户广场设置
      operationId: set_recommend_settings
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 设置
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/models.RecommendSetting'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户广场设置
      tags:
      - Settings
  /settings/setSquareSetting:
    post:
      consumes:
      - application/json
      description: 可设置用户广场设置
      operationId: set_square_settings
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 设置
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/models.SquareSettings'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户广场设置
      tags:
      - Settings
  /sys/getPrivacyPolicy:
    get:
      consumes:
      - application/json
      description: 可获取隐私政策
      operationId: get_privacy_policy
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.Agreement'
      security:
      - x-token: []
      summary: 可获取隐私政策
      tags:
      - Settings
  /sys/getUserTerms:
    get:
      consumes:
      - application/json
      description: 可获取用户协议
      operationId: get_user_terms
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.Agreement'
      security:
      - x-token: []
      summary: 可获取用户服务协议
      tags:
      - Settings
  /user/deleteUserImage:
    post:
      description: 删除用户图片
      operationId: delete_user_image
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 文件名
        in: query
        name: filename
        required: true
        type: string
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 删除用户图片
      tags:
      - User
  /user/getRandomUserDetails:
    get:
      consumes:
      - application/json
      description: 可通过用户ID获取用户详情  focusStatus说明： 0-未关注 1-已关注 friendStatus说明： -1-想认识ta
        0-已申请 1-发消息 2-去同意
      operationId: get_random_users_details
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户ID
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/controllers.UserDetails'
      security:
      - x-token: []
      summary: 获取广场用户详情
      tags:
      - User
  /user/getRandomUsers:
    post:
      consumes:
      - application/json
      description: 可通过用户ID以及用户广场设置项获取随机用户列表
      operationId: get_random_users_list_in_square
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 分页
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/models.Pagination'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/controllers.RandomUser'
            type: array
      security:
      - x-token: []
      summary: 获取用户广场随机用户列表
      tags:
      - User
  /user/getRecommendedUsers:
    get:
      consumes:
      - application/json
      description: 可通过用户ID获取推荐用户列表
      operationId: get_recommended_users
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/controllers.RecommendedUser'
            type: array
      security:
      - x-token: []
      summary: 获取用户推荐用户列表
      tags:
      - User
  /user/getUserDetails:
    get:
      consumes:
      - application/json
      description: 可根据用户ID获取用户详情
      operationId: get_user_details_by_id
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: user_id
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/controllers.UserDetails'
      security:
      - x-token: []
      summary: 根据用户ID获取用户详情
      tags:
      - User
  /user/getUserHomepageInfo:
    get:
      consumes:
      - application/json
      description: 可获取用户首页信息
      operationId: get_user_homepage_info
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.HomepageInfo'
      security:
      - x-token: []
      summary: 获取用户首页信息
      tags:
      - User
  /user/getUserInfoCompleteLevel:
    get:
      consumes:
      - application/json
      description: 可根据用户ID获取用户信息完成度 0-未完成 1-基本信息 2-基本信息+头像
      operationId: get_user_info_complete_level
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.InfoCompletionLevel'
      security:
      - x-token: []
      summary: 根据用户ID获取用户信息完成度
      tags:
      - User
  /user/pet/deletePetImage:
    post:
      description: 删除宠物图片
      operationId: delete_pet_image
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 文件名
        in: query
        name: filename
        required: true
        type: string
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 删除宠物图片
      tags:
      - Pet
  /user/pet/getPetDetails:
    get:
      consumes:
      - application/json
      description: 可获取宠物详情
      operationId: get_pet_details
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.PetResponse'
      security:
      - x-token: []
      summary: 获取宠物详情
      tags:
      - Pet
  /user/pet/getPetDetailsById:
    get:
      consumes:
      - application/json
      description: 可根据用户id获取宠物详情
      operationId: get_pet_details_by_id
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户ID
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.PetResponse'
      security:
      - x-token: []
      summary: 根据用户id获取宠物详情
      tags:
      - Pet
  /user/pet/initPet:
    post:
      consumes:
      - application/json
      description: 用户可初始化宠物
      operationId: init_pet
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 初始化宠物
      tags:
      - Pet
  /user/pet/setPetDetails:
    post:
      consumes:
      - application/json
      description: 用户可设置宠物详情
      operationId: set_pet_details
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 宠物详情
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.PetRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置宠物详情
      tags:
      - Pet
  /user/pet/upload/setPetImage:
    post:
      consumes:
      - multipart/form-data
      description: 用户可上传宠物图片
      operationId: set_pet_image
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 宠物图片
        in: formData
        name: content
        required: true
        type: file
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置宠物图片
      tags:
      - Pet
  /user/relation/addViewOn:
    post:
      consumes:
      - application/json
      description: 可根据目标用户ID，设置用户之间的关注。
      operationId: add_view_on
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 看过谁
        in: body
        name: view
        required: true
        schema:
          $ref: '#/definitions/models.ViewRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置看过某个用户
      tags:
      - Relation
  /user/relation/approveFriendRequest:
    post:
      consumes:
      - application/json
      description: '可根据用户ID，同意目标用户ID的认识请求 error_code -1: 申请状态不允许重复发送请求'
      operationId: approve_friend_request
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 同意认识请求
        in: body
        name: focus
        required: true
        schema:
          $ref: '#/definitions/models.ContactApproveRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 用户可同意其他用户的认识请求
      tags:
      - Relation
  /user/relation/getFans:
    get:
      consumes:
      - application/json
      description: 可获取用户的粉丝列表。 status说明， 0 - 关注ta， 1 - 已互关
      operationId: get_fans
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.Fan'
            type: array
      security:
      - x-token: []
      summary: 获取用户我的粉丝列表
      tags:
      - Relation
  /user/relation/getFansToOthers:
    get:
      consumes:
      - application/json
      description: 可获取用户关注的人的列表。 status说明， 0 - 已关注， 1 - 已互关
      operationId: get_fans_to_others
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.Fan'
            type: array
      security:
      - x-token: []
      summary: 获取用户关注的人的列表
      tags:
      - Relation
  /user/relation/getFriendList:
    get:
      consumes:
      - application/json
      description: 可根据用户ID，获取用户好友列表 宠物类型说明 0-猫 1-狗 用户性别说明 1-男 2-女
      operationId: get_friend_list
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.Friend'
            type: array
      security:
      - x-token: []
      summary: 用户可获取好友列表
      tags:
      - Relation
  /user/relation/getFriendsInSevenDays:
    get:
      consumes:
      - application/json
      description: 可根据用户ID，获取7日内认识请求 state说明： 0-待处理 1-已婉拒 2-过期自动拒绝 3-已同意
      operationId: get_friends_in_seven_days
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.FriendToMeResponse'
            type: array
      security:
      - x-token: []
      summary: 用户可获取7日内认识请求
      tags:
      - Relation
  /user/relation/getFriendsOutOfSevenDays:
    get:
      consumes:
      - application/json
      description: 可根据用户ID，获取7日前认识请求 state说明： 0-待处理 1-已婉拒 2-过期自动拒绝 3-已同意
      operationId: get_friends_out_of_seven_days
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.FriendToMeResponse'
            type: array
      security:
      - x-token: []
      summary: 用户可获取7日前认识请求
      tags:
      - Relation
  /user/relation/getMyFriendRequests:
    get:
      consumes:
      - application/json
      description: 可根据用户ID，获取对其它用户的认识请求 state说明： 0-待处理 1-已婉拒 2-过期自动拒绝 3-已同意
      operationId: get_my_friend_requests
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.MyFriendRequest'
            type: array
      security:
      - x-token: []
      summary: 用户可获取对其它用户的认识请求
      tags:
      - Relation
  /user/relation/getViewList:
    get:
      consumes:
      - application/json
      description: 可获取看过该用户的用户列表 status说明： 0 - 新关注（未揭秘） 1 - 已阅关注（未揭秘） 2 - 已揭秘
      operationId: get_view_list
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.View'
            type: array
      security:
      - x-token: []
      summary: 获取看过该用户的用户列表
      tags:
      - Relation
  /user/relation/getViewToList:
    get:
      consumes:
      - application/json
      description: 获取该用户看过的用户列表 status说明： 0 - 未关注 1 - 已关注
      operationId: get_view_to_list
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            items:
              $ref: '#/definitions/models.ViewTo'
            type: array
      security:
      - x-token: []
      summary: 获取该用户看过的用户列表
      tags:
      - Relation
  /user/relation/rejectFriendRequest:
    post:
      consumes:
      - application/json
      description: '可根据用户ID，拒绝目标用户ID的认识请求 error_code -1: 申请状态不允许重复发送请求'
      operationId: reject_friend_request
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 拒绝认识请求
        in: body
        name: focus
        required: true
        schema:
          $ref: '#/definitions/models.ContactApproveRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 用户可拒绝其他用户的认识请求
      tags:
      - Relation
  /user/relation/releaseFriendRelation:
    post:
      consumes:
      - application/json
      description: '可根据用户ID，解除目标用户ID的认识关系 error_code -1: 表示用户没有好友关系或者状态不支持解除'
      operationId: release_friend_relation
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 解除认识关系
        in: body
        name: focus
        required: true
        schema:
          $ref: '#/definitions/models.ContactApproveRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 用户可解除与其他用户的好友关系
      tags:
      - Relation
  /user/relation/sendFriendRequest:
    post:
      consumes:
      - application/json
      description: 可根据用户ID，给目标用户ID发送认识请求
      operationId: send_friend_request
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 发送认识请求
        in: body
        name: focus
        required: true
        schema:
          $ref: '#/definitions/models.ContactRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 用户发送认识请求
      tags:
      - Relation
  /user/relation/setFocusOn:
    post:
      consumes:
      - application/json
      description: 可根据用户ID，目标用户ID，关注状态设置用户之间的关注。 0 - 取消关注， 1 - 新关注， 2 - 已关注（用户已阅）
      operationId: set_focus_on
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 关注谁
        in: body
        name: focus
        required: true
        schema:
          $ref: '#/definitions/models.FocusRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置两个用户之间的关注
      tags:
      - Relation
  /user/relation/setViewRevealed:
    post:
      consumes:
      - application/json
      description: 可根据目标用户ID，设置看过我的用户立即揭秘状态。
      operationId: set_view_revealed
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 看过谁
        in: body
        name: view
        required: true
        schema:
          $ref: '#/definitions/models.ViewRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户立即揭秘状态
      tags:
      - Relation
  /user/relation/updateAllNewFocusStatus:
    post:
      consumes:
      - application/json
      description: 可设置用户新增关注已阅
      operationId: update_all_new_focus_status
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户新增关注已阅
      tags:
      - Relation
  /user/relation/updateAllNewViewStatus:
    post:
      consumes:
      - application/json
      description: 可设置用户新增看过已阅
      operationId: update_all_new_view_status
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户新增看过已阅
      tags:
      - Relation
  /user/setPosition:
    post:
      consumes:
      - application/json
      description: 可设置用户位置坐标
      operationId: set_user_position
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户位置坐标
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Position'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户位置坐标
      tags:
      - User
  /user/setUserBasicInfo:
    post:
      consumes:
      - application/json
      description: 可通过用户token设置用户基础信息
      operationId: set_user_basic_info
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户基础信息
        in: body
        name: basicInfo
        required: true
        schema:
          $ref: '#/definitions/models.BasicInfo'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户基础信息
      tags:
      - User
  /user/setUserDetails:
    post:
      consumes:
      - application/json
      description: 用户可设置信息
      operationId: set_user_details
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserDetailsUpdate'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户信息
      tags:
      - User
  /user/setUserGender:
    post:
      consumes:
      - application/json
      description: 可通过用户token设置用户性别
      operationId: set_user_gender
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户性别
        in: body
        name: gender
        required: true
        schema:
          $ref: '#/definitions/models.UserGender'
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户性别
      tags:
      - User
  /user/setting/getPhoneNumber:
    get:
      consumes:
      - application/json
      description: 可通过微信接口获取授权用户手机号
      operationId: get_user_phone_number
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.UserPhoneNumber'
      security:
      - x-token: []
      summary: 可通过微信接口获取授权用户手机号
      tags:
      - Settings
  /user/setting/getUserSettings:
    get:
      consumes:
      - application/json
      description: 可获取用户个人设置 Verified 用户实名 0-未认证 1-已认证 PetVerified 宠物实名 0-未认证 1-已认证
        phone="" 未绑定
      operationId: get_user_settings
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/models.UserSetting'
      security:
      - x-token: []
      summary: 用户可个人设置
      tags:
      - Settings
  /user/tencent/getUserIMSig:
    get:
      consumes:
      - application/json
      description: 可获取用户腾讯IM签名
      operationId: get_user_im_sig
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserIMSig'
      security:
      - x-token: []
      summary: 获取用户腾讯IM签名
      tags:
      - Tencent
  /user/upload/setUserAvatar:
    post:
      consumes:
      - multipart/form-data
      description: 用户可设置头像
      operationId: set_user_avatar
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: content
        required: true
        type: file
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户头像
      tags:
      - User
  /user/upload/setUserCover:
    post:
      consumes:
      - multipart/form-data
      description: 用户可设置封面图
      operationId: set_user_cover
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 封面文件
        in: formData
        name: content
        required: true
        type: file
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户封面图
      tags:
      - User
  /user/upload/setUserImage:
    post:
      consumes:
      - multipart/form-data
      description: 用户可上传图片
      operationId: set_user_image
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      - description: 用户图片
        in: formData
        name: content
        required: true
        type: file
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 设置用户图片
      tags:
      - User
  /users/relation/updateAllNewFriendRequestStatus:
    post:
      consumes:
      - application/json
      description: 系统可将用户新认识申请更新为已阅
      operationId: update_all_new_friend_request_status
      parameters:
      - description: Authorization
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "0":
          description: ""
      security:
      - x-token: []
      summary: 系统可将用户新认识申请更新为已阅
      tags:
      - Relation
swagger: "2.0"
